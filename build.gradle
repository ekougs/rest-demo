buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
  }

  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
  }
}

plugins {
  id "com.ewerk.gradle.plugins.querydsl" version "1.0.3"
}

group 'com.zenika'
version '0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'application'

project.sourceCompatibility = 1.8
project.targetCompatibility = 1.8

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'org.springframework.boot:spring-boot-starter-jersey'
  compile 'org.mongodb:mongodb-driver:3.0.3'
  compile 'org.mongodb.morphia:morphia:1.0.1'
  compile 'org.springframework.data:spring-data-mongodb:1.6.1.RELEASE'
  compile 'com.mysema.querydsl:querydsl-mongodb:3.6.0'

  // LOGGING
  compile 'log4j:log4j:1.2.17'

  // TESTS
  testCompile 'org.assertj:assertj-core:1.7.0'
  testCompile 'org.springframework.boot:spring-boot-starter-test'
  testCompile 'org.mockito:mockito-all:1.9.5'
}

jar {
  manifest {
    attributes 'Main-Class': 'com.zenika.restdemo.Application'
  }
}

task launchInfra(type: Exec) {
  commandLine './launch-shop-infrastructure.sh'
}

task stopAndDeleteInfra(type: Exec) {
  commandLine './stop-delete-shop-infrastructure.sh'
}

querydsl {
  springDataMongo = true
}
